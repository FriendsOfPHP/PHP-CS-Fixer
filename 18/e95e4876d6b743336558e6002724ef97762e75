---------------------------------------------------------------------------

by Bilge at 2019-08-14T10:17:29Z

Why has this stalled?

---------------------------------------------------------------------------

by svnldwg at 2019-09-04T07:22:52Z

Very interested in this. Let me know if I can support.

---------------------------------------------------------------------------

by gharlan at 2019-09-05T08:29:38Z

ready for review

---------------------------------------------------------------------------

by gharlan at 2019-09-07T13:41:11Z

just for testing purposes (!), I applied the fixer (with `'import_*' => true`) to this repo: https://github.com/gharlan/PHP-CS-Fixer/commit/6c1f2730d466eb7ddd1f1e5ef87049e447b8a4d3
seems to work :)

---------------------------------------------------------------------------

by BobMali at 2019-10-02T11:22:31Z

Not familiar with the workflow. When is this going to be released?

---------------------------------------------------------------------------

by kubawerlos at 2019-10-02T21:25:57Z

@BobMali one day ;)

Currently, there is a lot of PRs waiting for review, any help would be great.

Even - or maybe especially - testing the fixer in practice will help - if you have some legacy project - apply the fixer and see if all is good - if not, comment with test cases that are not yet handled.

---------------------------------------------------------------------------

by SpacePossum at 2019-10-10T11:29:56Z

On the branch I tried:

```
    ->setRules([
        'global_namespace_import' => [
            'import_classes' => true,
        ],
    ])
```

resulting in:

```
$ php php-cs-fixer fix -vvv src/Report/JunitReporter.php --dry-run --diff
Loaded config default from "/home/possum/work/PHP-CS-Fixer/.php_cs.dist".
Using cache file ".php_cs.cache".
Paths from configuration file have been overridden by paths provided as command arguments.
F
Legend: ?-unknown, I-invalid file syntax, file ignored, S-Skipped, .-no changes, F-fixed, E-error
   1) src/Report/JunitReporter.php (global_namespace_import)
$ php php-cs-fixer fix -vvv src/Report/JunitReporter.php --dry-run --diff
Loaded config default from "/home/possum/work/PHP-CS-Fixer/.php_cs.dist".
Using cache file ".php_cs.cache".
Paths from configuration file have been overridden by paths provided as command arguments.
F
Legend: ?-unknown, I-invalid file syntax, file ignored, S-Skipped, .-no changes, F-fixed, E-error
   1) src/Report/JunitReporter.php (global_namespace_import)
```

which generated the import twice;

```diff
--- Original
+++ New
@@ @@
 use Symfony\Component\Console\Formatter\OutputFormatter;
+use RuntimeException;
+use DOMElement;
+use DOMDocument;
+use DomElement;
@@ @@
         if (!\extension_loaded('dom')) {
-            throw new \RuntimeException('Cannot generate report! `ext-dom` is not available!');
+            throw new RuntimeException('Cannot generate report! `ext-dom` is not available!');
         }

-        $dom = new \DOMDocument('1.0', 'UTF-8');
+        $dom = new DOMDocument('1.0', 'UTF-8');
         $testsuites = $dom->appendChild($dom->createElement('testsuites'));
-        /** @var \DomElement $testsuite */
+        /** @var DomElement $testsuite */
@@ @@

-    private function createSuccessTestCase(\DOMDocument $dom, \DOMElement $testsuite)
+    private function createSuccessTestCase(DOMDocument $dom, DOMElement $testsuite)
@@ @@
     /**
-     * @param \DOMDocument  $dom
-     * @param \DOMElement   $testsuite
+     * @param DOMDocument  $dom
+     * @param DOMElement   $testsuite
      * @param ReportSummary $reportSummary
      */
-    private function createFailedTestCases(\DOMDocument $dom, \DOMElement $testsuite, ReportSummary $reportSummary)
+    private function createFailedTestCases(DOMDocument $dom, DOMElement $testsuite, ReportSummary $reportSummary)
@@ @@
     /**
-     * @param \DOMDocument $dom
+     * @param DOMDocument $dom
      * @param string       $file
      * @param array        $fixResult
      * @param bool         $shouldAddAppliedFixers
      *
-     * @return \DOMElement
+     * @return DOMElement
      */
-    private function createFailedTestCase(\DOMDocument $dom, $file, array $fixResult, $shouldAddAppliedFixers)
+    private function createFailedTestCase(DOMDocument $dom, $file, array $fixResult, $shouldAddAppliedFixers)
     {
         $appliedFixersCount = \count($fixResult['appliedFixers']);

         $testName = str_replace('.', '_DOT_', Preg::replace('@\.'.pathinfo($file, PATHINFO_EXTENSION).'$@', '', $file));

         $testcase = $dom->createElement('testcase');
         $testcase->setAttribute('name', $testName);
         $testcase->setAttribute('file', $file);
         $testcase->setAttribute('assertions', (string) $appliedFixersCount);

         $failure = $dom->createElement('failure');
         $failure->setAttribute('type', 'code_style');
         $testcase->appendChild($failure);

         if ($shouldAddAppliedFixers) {
             $failureContent = "applied fixers:\n---------------\n";

             foreach ($fixResult['appliedFixers'] as $appliedFixer) {
                 $failureContent .= "* {$appliedFixer}\n";
             }
         } else {
             $failureContent = "Wrong code style\n";
         }

         if (!empty($fixResult['diff'])) {
             $failureContent .= "\nDiff:\n---------------\n\n".$fixResult['diff'];
         }

         $failure->appendChild($dom->createCDATASection(trim($failureContent)));

         return $testcase;
     }
 }
```

---------------------------------------------------------------------------

by gharlan at 2019-10-10T19:02:25Z

@SpacePossum good catch! Please check again.
